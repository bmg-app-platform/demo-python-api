name: Create and publish a Docker image

on:
  push:
    branches: 
      - main
    tags:
      - 'v*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.REGISTRY_NAME }}
  GITHUB_OUTPUT: ""

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}"

  update-image-tag-for-deployment:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: ${{ always() && !cancelled() && needs.build.result == 'success' }}
    steps:    
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: bmg-app-platform/deployment-application
          branch:
          path: deployment-application
          token: ${{ secrets.GITHUB_TOKEN }} 
      
      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'demo-python-app/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ steps.vars.outputs.sha_short }}
          repository: owner/target-repository
          branch: deployment/${{ steps.vars.outputs.sha_short }}
          targetBranch: main
          createPR: true
          message: 'Update Image Version to ${{ steps.vars.outputs.sha_short }}'
          token: ${{ secrets.GITHUB_TOKEN }}
          workDir: demo-python-app