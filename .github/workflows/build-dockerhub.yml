name: Create and publish a Docker image

on:
  push:
    branches: 
      - main
    tags:
      - 'v*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.REGISTRY_NAME }}
  GITHUB_SHA_SHORT: ''

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      sha-image-tag: ${{ steps.vars.outputs.sha-short }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Set outputs
        id: vars
        run: echo "sha-short=$(echo sha-$(git rev-parse --short HEAD))" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ vars.REGISTRY_NAME }}
          tags: |
            type=sha

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}  


  update-image-tag-for-deployment:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:    
      - env:
          GITHUB_SHA_SHORT: ${{needs.build-and-push-image.outputs.sha-image-tag}}
        run: echo ${{ env.GITHUB_SHA_SHORT }}

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: bmg-app-platform/deployment-application
          path: deployment-application
          token: ${{ secrets.REPOSITORY_TOKEN }} 
      
      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'demo-python-app/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ env.GITHUB_SHA_SHORT }}
          repository: bmg-app-platform/deployment-application
          branch: deployment/${{ env.GITHUB_SHA_SHORT }}
          targetBranch: main
          createPR: true
          message: 'Update Image Version to ${{ env.GITHUB_SHA_SHORT }}'
          token: ${{ secrets.REPOSITORY_TOKEN }}
          workDir: deployment-application
